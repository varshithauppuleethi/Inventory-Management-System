/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import dao.ConnectionProvider;
import javax.swing.table.TableModel;

/**
 *
 * @author varshitha
 */

public class Equipments extends javax.swing.JFrame {
    
    private String equipmentid;
    private String div;
    private String userid;

    /**
     * Creates new form Equipments
     */
    public Equipments(){
        initComponents();
    }
    public Equipments(String division,String userid) {
        initComponents();
 
        this.div = division;
        this.userid=userid;
        setLocationRelativeTo(null);
    }
    
    private boolean validateFields(String formType){
        if(formType.equals("new")&&!txtEqupId.getText().equals("")&&!txtName.getText().equals("")&&!txtMake.getText().equals("")&&!txtId.getText().equals("")&&!txtRange.getText().equals("")&&!txtAcceptance.getText().equals("")&&!txtFrequency.getText().equals("")&&!txtCalibAgen.getText().equals("")&&!txtDateCalib.getText().equals("")&&!txtDueCalib.getText().equals("")&&!txtRecallDate.getText().equals(""))
            return false;
        else
            return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEquipment = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        txtEqupId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMake = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRange = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAcceptance = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFrequency = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCalibAgen = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDateCalib = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtDueCalib = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtRecallDate = new javax.swing.JTextField();
        butSave = new javax.swing.JButton();
        butUpdate = new javax.swing.JButton();
        butDelete = new javax.swing.JButton();
        butReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LIST OF MONITORING AND MEASURING EQUIPMENT FOR CALIBRATION");

        tableEquipment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment Id", "Name of the equipment", "MAKE", "ID No.", "Range", "Acceptance Criteria", "Frequency of calibration", "Calibration Agency ", "Date of Calibration", "Calibration due date", "Recall date"
            }
        ));
        tableEquipment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEquipmentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEquipment);

        txtEqupId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEqupId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEqupIdActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Name of the equipment");

        txtName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("MAKE");

        txtMake.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMake.setAutoscrolls(false);
        txtMake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMakeActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("ID No.");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Range");

        txtRange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Acceptance Criteria");

        txtAcceptance.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Frequency of Calibration");

        txtFrequency.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtFrequency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFrequencyActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Calibration Agency");

        txtCalibAgen.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCalibAgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCalibAgenActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Date of Calibration");

        txtDateCalib.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDateCalib.setText("YYYY-MM-DD");
        txtDateCalib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateCalibActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Calibration due date");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Equipment Id");

        txtDueCalib.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDueCalib.setText("YYYY-MM-DD");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("Recall date");

        txtRecallDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtRecallDate.setText("YYYY-MM-DD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtAcceptance, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                        .addComponent(txtRange, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtId, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtFrequency, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCalibAgen, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtRecallDate, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtDueCalib, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                        .addComponent(txtDateCalib, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMake, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                        .addComponent(txtEqupId, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEqupId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAcceptance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFrequency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCalibAgen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDateCalib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDueCalib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRecallDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(jPanel1);

        butSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butSave.setText("Save");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        butUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butDelete.setText("Delete");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        butReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butReset.setText("Reset");
        butReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(53, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butSave)
                                .addGap(34, 34, 34)
                                .addComponent(butUpdate)
                                .addGap(26, 26, 26)
                                .addComponent(butDelete)
                                .addGap(32, 32, 32)
                                .addComponent(butReset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)))
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butReset)
                        .addGap(106, 106, 106)
                        .addComponent(jLabel2))
                    .addComponent(butSave)
                    .addComponent(butUpdate)
                    .addComponent(butDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableEquipment.getModel();
        
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps1=con.prepareStatement("select*from equipmenttable where divisioncode=?");
            ps1.setString(1,div);
            ResultSet rs1 =ps1.executeQuery();
            while (rs1.next()) {
                model.addRow(new Object[]{rs1.getString("equipmentid"), rs1.getString("name_equipment"), rs1.getString("make"), rs1.getString("id_no"), rs1.getString("ra_nge"), rs1.getString("acceptance_criteria"), rs1.getString("frequency_calibration"), rs1.getString("calibration_agency"), rs1.getDate("date_of_calibration"), rs1.getDate("calibration_due_date"), rs1.getDate("recall_date")});
                }
            }
    catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
    }

    butUpdate.setEnabled (false);
    butDelete.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    
    private void txtFrequencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFrequencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFrequencyActionPerformed

    private void txtCalibAgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCalibAgenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCalibAgenActionPerformed

    private void txtDateCalibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateCalibActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateCalibActionPerformed
private void refreshTable() {
    DefaultTableModel model = (DefaultTableModel) tableEquipment.getModel();
    model.setRowCount(0); // Clear the existing rows
    try {
        Connection con = ConnectionProvider.getCon();
        PreparedStatement ps1 = con.prepareStatement("select * from equipmenttable where divisioncode=?");
        ps1.setString(1, div);
        ResultSet rs1 = ps1.executeQuery();
        while (rs1.next()) {
            model.addRow(new Object[]{rs1.getString("equipmentid"), rs1.getString("name_equipment"), rs1.getString("make"), rs1.getString("id_no"), rs1.getString("ra_nge"), rs1.getString("acceptance_criteria"), rs1.getString("frequency_calibration"), rs1.getString("calibration_agency"), rs1.getDate("date_of_calibration"), rs1.getDate("calibration_due_date"), rs1.getDate("recall_date")});
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        // TODO add your handling code here:
        String equpid=txtEqupId.getText();
        String name=txtName.getText();
        String make=txtMake.getText();
        String id_no=txtId.getText();
        String range=txtRange.getText();
        String acceptane_criteria=txtAcceptance.getText();
        String frequency_carlibration=txtFrequency.getText();
        String calibration_agency=txtCalibAgen.getText();
        String date_of_calibration=txtDateCalib.getText();
        String calibration_due_date=txtDueCalib.getText();
        String recall_date=txtRecallDate.getText();
        
        if(validateFields("new")){
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        try{
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("insert into equipmenttable(equipmentid,name_equipment,make,id_no,ra_nge,acceptance_criteria,frequency_calibration,calibration_agency,date_of_calibration,calibration_due_date,recall_date,divisioncode,user_id)values(?,?,?,?,?,?,?,?,?,?,?,?,?)");
            ps.setString(1,equpid);
            ps.setString(2,name);
            ps.setString(3,make);
            ps.setString(4,id_no);
            ps.setString(5,range);
            ps.setString(6,acceptane_criteria);
            ps.setString(7,frequency_carlibration);
            ps.setString(8,calibration_agency);
            ps.setString(9,date_of_calibration);
            ps.setString(10,calibration_due_date);
            ps.setString(11,recall_date);
            ps.setString(12, div);
            ps.setString(13, userid);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Added Successfully");
            setVisible(false);
            new Equipments(div,userid).setVisible(true);
            
                    
          refreshTable(); 
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }
    }//GEN-LAST:event_butSaveActionPerformed

    private void tableEquipmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEquipmentMouseClicked
        // TODO add your handling code here:
        int index=tableEquipment.getSelectedRow();
        TableModel model=tableEquipment.getModel();
        
       String equip_id =model.getValueAt(index, 0).toString();
       equipmentid=equip_id;
      txtEqupId.setText(equip_id);
        
        String name=model.getValueAt(index, 1).toString();
        txtName.setText(name);
        
        String make=model.getValueAt(index, 2).toString();
        txtMake.setText(make);
        
        String id=model.getValueAt(index, 3).toString();
        txtId.setText(id);
        
        String range=model.getValueAt(index, 4).toString();
        txtRange.setText(range);
        
        String acceptane_criteria=model.getValueAt(index, 5).toString();
        txtAcceptance.setText(acceptane_criteria);
        
        String frequency_carlibration=model.getValueAt(index, 6).toString();
        txtFrequency.setText(frequency_carlibration);
        
        String calibration_agency=model.getValueAt(index, 7).toString();
        txtCalibAgen.setText(calibration_agency);
        
        String date_of_calibration=model.getValueAt(index, 8).toString();
        txtDateCalib.setText(date_of_calibration);
        
        String calibration_due_date=model.getValueAt(index, 9).toString();
        txtDueCalib.setText(calibration_due_date);
        
        String recall_date=model.getValueAt(index, 10).toString();
        txtRecallDate.setText(recall_date);
        
        butSave.setEnabled(false);
        butUpdate.setEnabled(true);
        butDelete.setEnabled(true);
    }//GEN-LAST:event_tableEquipmentMouseClicked

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        // TODO add your handling code here:
        
        String name=txtName.getText();
        String make=txtMake.getText();
        String id_no=txtId.getText();
        String range=txtRange.getText();
        String acceptane_criteria=txtAcceptance.getText();
        String frequency_carlibration=txtFrequency.getText();
        String calibration_agency=txtCalibAgen.getText();
        String date_of_calibration=txtDateCalib.getText();
        String calibration_due_date=txtDueCalib.getText();
        String recall_date=txtRecallDate.getText();
        
        if(validateFields("new")){
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        equipmentid = txtEqupId.getText(); 
        try{
            Connection con=ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement(" update equipmenttable set name_equipment=?,make=?,id_no=?,ra_nge=?,acceptance_criteria=?,frequency_calibration=?,calibration_agency=?,date_of_calibration=?,calibration_due_date=?,recall_date=? where equipmentid=?");
            ps.setString(1,name);
            ps.setString(2,make);
            ps.setString(3,id_no);
            ps.setString(4,range);
            ps.setString(5,acceptane_criteria);
            ps.setString(6,frequency_carlibration);
            ps.setString(7,calibration_agency);
            ps.setString(8,date_of_calibration);
            ps.setString(9,calibration_due_date);
            ps.setString(10,recall_date);
            ps.setString(11,equipmentid);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated Successfully");
            setVisible(false);
            new Equipments(div,userid).setVisible(true);
            
                    
          
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }  
        
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Equipments(div,userid).setVisible(true);
    }//GEN-LAST:event_butResetActionPerformed

    private void txtMakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMakeActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        // TODO add your handling code here:
        //private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
    // Check if a row is selected
    int selectedRow = tableEquipment.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to delete.");
        return;
    }

    // Get the selected row's SI No.
    TableModel model = tableEquipment.getModel();
    String  equipmentid= model.getValueAt(selectedRow, 0).toString();
    //String equipmentid = String.valueOf(equipmentid);

    // Confirm the deletion
    int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        try {
            // Establish a connection
            Connection con = ConnectionProvider.getCon();

            // Prepare SQL statement
            PreparedStatement ps = con.prepareStatement("DELETE FROM equipmenttable WHERE equipmentid = ?");
            ps.setString(1, equipmentid);

            // Execute the statement
            ps.executeUpdate();

            // Refresh the table
            DefaultTableModel modelTable = (DefaultTableModel) tableEquipment.getModel();
            modelTable.setRowCount(0);
            formComponentShown(null);

            JOptionPane.showMessageDialog(null, "Record deleted successfully.");
            butUpdate.setEnabled(false);
            butDelete.setEnabled(false);
            butSave.setEnabled(true);
            new Equipments(div,userid).setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        refreshTable(); 
    }

    }//GEN-LAST:event_butDeleteActionPerformed

    private void txtEqupIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEqupIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEqupIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new Equipments().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butReset;
    private javax.swing.JButton butSave;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tableEquipment;
    private javax.swing.JTextField txtAcceptance;
    private javax.swing.JTextField txtCalibAgen;
    private javax.swing.JTextField txtDateCalib;
    private javax.swing.JTextField txtDueCalib;
    private javax.swing.JTextField txtEqupId;
    private javax.swing.JTextField txtFrequency;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMake;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRange;
    private javax.swing.JTextField txtRecallDate;
    // End of variables declaration//GEN-END:variables
}
