
import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author varshitha
 */

public class ShelfLife extends javax.swing.JFrame {

    /**
     * Creates new form shelf_life
     */
private String InventoryNumber;
    private String div;
    private String userid;
    

    public ShelfLife() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public ShelfLife(String division,String userid) {
        initComponents();
        this.div = division;
        this.userid=userid;
        setLocationRelativeTo(null);
    }

    private boolean validateFields(String formType) {
        if (formType.equals("new") && !txtInvenId.getText().equals("") && !txtItemDesc.getText().equals("") && !txtExpDate.getText().equals("") && !txtQty.getText().equals("") && !txtDispMech.getText().equals("") && !txtRemark.getText().equals(""))
            return false;
        else 
            return true;
                   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableShelfLife = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtItemDesc = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtExpDate = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDispMech = new javax.swing.JTextField();
        butSave = new javax.swing.JButton();
        butUpdate = new javax.swing.JButton();
        butReset = new javax.swing.JButton();
        butDelete = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtInvenId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        tableShelfLife.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory Id", "Item Description", "Shelf Life/Expiry Date", "Quantity", "Disposal Mechanism", "Remark"
            }
        ));
        tableShelfLife.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableShelfLifeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableShelfLife);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Item Description");

        txtItemDesc.setColumns(20);
        txtItemDesc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtItemDesc.setRows(5);
        jScrollPane2.setViewportView(txtItemDesc);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Shelf life /Expiry date");

        txtExpDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtExpDate.setText("YYYY-MM-DD");
        txtExpDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExpDateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Quantity");

        txtQty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Remark");

        txtRemark.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("LIST OF SHELF LIFE ITEMS");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText(" Disposal Mechanism");

        txtDispMech.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        butSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butSave.setText("Save");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        butUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butReset.setText("Reset");
        butReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResetActionPerformed(evt);
            }
        });

        butDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butDelete.setText("Delete");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Inventory Id");

        txtInvenId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butSave)
                                .addGap(28, 28, 28)
                                .addComponent(butUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 166, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(butDelete)
                                .addGap(30, 30, 30)))
                        .addComponent(butReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                            .addComponent(txtExpDate)
                            .addComponent(txtQty)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDispMech)
                            .addComponent(txtRemark)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInvenId))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(320, 320, 320))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInvenId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDispMech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(butSave)
                            .addComponent(butUpdate)
                            .addComponent(butDelete)
                            .addComponent(butReset)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void txtExpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExpDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExpDateActionPerformed

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        // TODO add your handling code here:
        String invenid = txtInvenId.getText();
        String item = txtItemDesc.getText();
        String expdate = txtExpDate.getText();
        String qty = txtQty.getText();
        String disposalmech = txtDispMech.getText();
        String remark = txtRemark.getText();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("insert into inventorytable(InventoryNumber,item_desc,expiry_date,quantity,disposal_mechanism,remarks,divisioncode,user_id)values(?,?,?,?,?,?,?,?)");
            ps.setString(1, invenid);
            ps.setString(2, item);
            ps.setString(3, expdate);
            ps.setString(4, qty);
            ps.setString(5, disposalmech);
            ps.setString(6, remark);
            ps.setString(7, div);
            ps.setString(8, userid);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Added Successfully");
            setVisible(false);
            new ShelfLife(div,userid).setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }


    }//GEN-LAST:event_butSaveActionPerformed

    private void butResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ShelfLife(div,userid).setVisible(true);
    }//GEN-LAST:event_butResetActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        // TODO add your handling code here:
        String item = txtItemDesc.getText();
        String expdate = txtExpDate.getText();
        String qty = txtQty.getText();
        String disposalmech = txtDispMech.getText();
        String remark = txtRemark.getText();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("update inventorytable set item_desc=?,expiry_date=?,quantity=?,disposal_mechanism=?,remarks=? where InventoryNumber=?");
            ps.setString(1, item);
            ps.setString(2, expdate);
            ps.setString(3, qty);
            ps.setString(4, disposalmech);
            ps.setString(5, remark);
            ps.setString(6,InventoryNumber );
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Updated Successfully");
            setVisible(false);
            new ShelfLife(div,userid).setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }

    }//GEN-LAST:event_butUpdateActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableShelfLife.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
            return;
        }
        TableModel model = tableShelfLife.getModel();
        String Inven_Number = model.getValueAt(selectedRow, 0).toString();
        InventoryNumber=Inven_Number;
        //int sno_pk = Integer.parseInt(sno);
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Establish a connection
                Connection con = ConnectionProvider.getCon();

                // Prepare SQL statement
                PreparedStatement ps = con.prepareStatement("DELETE FROM inventorytable WHERE InventoryNumber = ?");
                ps.setString(1, InventoryNumber);

                // Execute the statement
                ps.executeUpdate();

                // Refresh the table
                DefaultTableModel modelTable = (DefaultTableModel) tableShelfLife.getModel();
                modelTable.setRowCount(0);
                formComponentShown(null);

                JOptionPane.showMessageDialog(null, "Record deleted successfully.");
                butUpdate.setEnabled(false);
                butDelete.setEnabled(false);
                butSave.setEnabled(true);
                new ShelfLife(div,userid).setVisible(true);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }

    }//GEN-LAST:event_butDeleteActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableShelfLife.getModel();
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps1 = con.prepareStatement("select*from inventorytable where divisioncode=?");
            ps1.setString(1, div);
            ResultSet rs = ps1.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("InventoryNumber"), rs.getString("item_desc"), rs.getDate("expiry_date"), rs.getInt("quantity"), rs.getString("disposal_mechanism"), rs.getString("remarks")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        butUpdate.setEnabled(false);
        butDelete.setEnabled(false);

   
    }//GEN-LAST:event_formComponentShown

    private void tableShelfLifeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableShelfLifeMouseClicked
        // TODO add your handling code here:
        int index = tableShelfLife.getSelectedRow();
        TableModel model = tableShelfLife.getModel();

        String Inven_Number = model.getValueAt(index, 0).toString();
        InventoryNumber = Inven_Number;
        txtInvenId.setText(Inven_Number);

        String item = model.getValueAt(index, 1).toString();
        txtItemDesc.setText(item);

        String expdate = model.getValueAt(index, 2).toString();
        txtExpDate.setText(expdate);

        String qty = model.getValueAt(index, 3).toString();
        txtQty.setText(qty);

        String disposalmech = model.getValueAt(index, 4).toString();
        txtDispMech.setText(disposalmech);

        String remark = model.getValueAt(index, 5).toString();
        txtRemark.setText(remark);

        butSave.setEnabled(false);
        butUpdate.setEnabled(true);
        butDelete.setEnabled(true);
    }//GEN-LAST:event_tableShelfLifeMouseClicked

    
        /**
         * @param args the command line arguments
         */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(ShelfLife.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(ShelfLife.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(ShelfLife.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(ShelfLife.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new ShelfLife().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butReset;
    private javax.swing.JButton butSave;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableShelfLife;
    private javax.swing.JTextField txtDispMech;
    private javax.swing.JTextField txtExpDate;
    private javax.swing.JTextField txtInvenId;
    private javax.swing.JTextArea txtItemDesc;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRemark;
    // End of variables declaration//GEN-END:variables
}
