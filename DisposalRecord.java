
import dao.ConnectionProvider;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author varshitha
 */
public class DisposalRecord extends javax.swing.JFrame {

    /**
     * Creates new form DisposalRecord
     */
    private String div;
    private String InventoryNumber;
    private String userid;

    public DisposalRecord() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public DisposalRecord(String division, String userid) {
        initComponents();
        this.div = division;
        this.userid = userid;
        setLocationRelativeTo(null);
    }

    private boolean validateFields(String formType) {
        if (formType.equals("new") && !txtInvenId.getText().equals("") && !txtItemDesc.getText().equals("") && !txtQty.getText().equals("") && !txtDateMan.getText().equals("") && !txtDateExp.getText().equals("") && !txtDispDate.getText().equals("") && !txtIssue.getText().equals("") && !txtDispMech.getText().equals("") && !txtRemark.getText().equals("")) {
            return false;
        } else if (formType.equals("edit") && !txtItemDesc.getText().equals("") && !txtQty.getText().equals("") && !txtDateMan.getText().equals("") && !txtDateExp.getText().equals("") && !txtDispDate.getText().equals("") && !txtIssue.getText().equals("") && !txtDispMech.getText().equals("") && !txtRemark.getText().equals("")) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDisposalRecord = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtItemDesc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDateMan = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDateExp = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDispDate = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIssue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDispMech = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtRemark = new javax.swing.JTextField();
        butSave = new javax.swing.JButton();
        butUpdate = new javax.swing.JButton();
        butDelete = new javax.swing.JButton();
        butReset = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtInvenId = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("SHELF LIFE ITEMS ISSUE / DISPOSAL RECORD");

        tableDisposalRecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory Id", "Item Description ", "Quantity", "Date of Manufacture", "Date of Expiry", "Issue/Disposal Date", "Issued to", "Disposal Mechanism", "Remark"
            }
        ));
        tableDisposalRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDisposalRecordMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDisposalRecord);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Item Description");

        txtItemDesc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Quantity");

        txtQty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Date of Manufacture");

        txtDateMan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDateMan.setText("YYYY-MM-DD");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Date of Expiry");

        txtDateExp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDateExp.setText("YYYY-MM-DD");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Issue /Disposal Date");

        txtDispDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDispDate.setText("YYYY-MM-DD");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Issued to  (Dte./Div.name)");

        txtIssue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Disposal Mechanis, (in case of disposal)");

        txtDispMech.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Remark");

        txtRemark.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        butSave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butSave.setText("Save");
        butSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveActionPerformed(evt);
            }
        });

        butUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butUpdate.setText("Update");
        butUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butUpdateActionPerformed(evt);
            }
        });

        butDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butDelete.setText("Delete");
        butDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butDeleteActionPerformed(evt);
            }
        });

        butReset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        butReset.setText("Reset");
        butReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butResetActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Inventory Id");

        txtInvenId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQty)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtItemDesc)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDateMan)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDateExp)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDispDate)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtIssue)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDispMech)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRemark)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(butSave)
                        .addGap(35, 35, 35)
                        .addComponent(butUpdate)
                        .addGap(39, 39, 39)
                        .addComponent(butDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(butReset))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtInvenId))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInvenId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItemDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateMan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDateExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDispDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDispMech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSave)
                    .addComponent(butUpdate)
                    .addComponent(butDelete)
                    .addComponent(butReset))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void butResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new DisposalRecord(div, userid).setVisible(true);
    }//GEN-LAST:event_butResetActionPerformed

    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableDisposalRecord.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete.");
            return;
        }
        TableModel model = tableDisposalRecord.getModel();
        //String invent_number = model.getValueAt(selectedRow, 0).toString();
        //int sno_pk = Integer.parseInt(sno);
        String Inven_Number = model.getValueAt(selectedRow, 0).toString();
        InventoryNumber = Inven_Number;
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Establish a connection
                Connection con = ConnectionProvider.getCon();

                // Prepare SQL statement
                PreparedStatement ps = con.prepareStatement("DELETE FROM inventorytable WHERE InventoryNumber = ?");
                ps.setString(1, InventoryNumber);

                // Execute the statement
                ps.executeUpdate();

                // Refresh the table
                DefaultTableModel modelTable = (DefaultTableModel) tableDisposalRecord.getModel();
                modelTable.setRowCount(0);
                formComponentShown(null);

                JOptionPane.showMessageDialog(null, "Record deleted successfully.");
                butUpdate.setEnabled(false);
                butDelete.setEnabled(false);
                butSave.setEnabled(true);
                new DisposalRecord(div, userid).setVisible(true);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
         
        }
        refreshTable();
    }//GEN-LAST:event_butDeleteActionPerformed
    private void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) tableDisposalRecord.getModel();
        model.setRowCount(0); // Clear the existing rows
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps1 = con.prepareStatement("select * from inventorytable where divisioncode=?");
            ps1.setString(1, div);
            ResultSet rs1 = ps1.executeQuery();
            while (rs1.next()) {
                model.addRow(new Object[]{rs1.getString("InventoryNumber"), rs1.getString("item_desc"), rs1.getString("quantity"), rs1.getDate("manufactore_date"), rs1.getDate("expiry_date"), rs1.getDate("disposal_date"), rs1.getString("issued_to"), rs1.getString("disposal_mechanism"), rs1.getString("remarks")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void butSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveActionPerformed
        // TODO add your handling code here:
        String invenid = txtInvenId.getText();
        String item = txtItemDesc.getText();
        String qty = txtQty.getText();
        String manfdate = txtDateMan.getText();
        String expdate = txtDateExp.getText();
        String disposaldate = txtDispDate.getText();
        String issuedto = txtIssue.getText();
        String disposalmech = txtDispMech.getText();
        String remark = txtRemark.getText();

        if (validateFields("new")) {
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("insert into inventorytable(InventoryNumber,item_desc,quantity,manufactore_date,expiry_date,disposal_date,issued_to,disposal_mechanism,remarks,divisioncode,user_id)values(?,?,?,?,?,?,?,?,?,?,?)");
            ps.setString(1, invenid);
            ps.setString(2, item);
            ps.setString(3, qty);
            ps.setString(4, manfdate);
            ps.setString(5, expdate);
            ps.setString(6, disposaldate);
            ps.setString(7, issuedto);
            ps.setString(8, disposalmech);
            ps.setString(9, remark);
            ps.setString(10, div);
            ps.setString(11, userid);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Added Successfully");
            setVisible(false);
            refreshTable();
            new DisposalRecord(div, userid).setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
        
    }//GEN-LAST:event_butSaveActionPerformed

    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
      
      String item = txtItemDesc.getText();
    String qty = txtQty.getText();
    String manfdate = txtDateMan.getText();
    String expdate = txtDateExp.getText();
    String disposaldate = txtDispDate.getText();
    String issuedto = txtIssue.getText();
    String disposalmech = txtDispMech.getText();
    String remark = txtRemark.getText();

    if (validateFields("edit")) {
        JOptionPane.showMessageDialog(null, "All fields are required");
        return;
    }

    // Get the selected row index
    int selectedRow = tableDisposalRecord.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(null, "Please select a row to update.");
        return;
    }

    // Retrieve InventoryNumber from the selected row
    TableModel model = tableDisposalRecord.getModel();
    InventoryNumber = model.getValueAt(selectedRow, 0).toString();

    // Database connection and update operation
    Connection con = null;
    PreparedStatement ps = null;

    try {
        // Establish a connection to the database
        con = ConnectionProvider.getCon();
        
        // Prepare the SQL update statement
        ps = con.prepareStatement("UPDATE inventorytable SET item_desc=?, quantity=?, manufactore_date=?, expiry_date=?, disposal_date=?, issued_to=?, disposal_mechanism=?, remarks=? WHERE InventoryNumber=?");
        ps.setString(1, item);
        ps.setString(2, qty);
        ps.setString(3, manfdate);
        ps.setString(4, expdate);
        ps.setString(5, disposaldate);
        ps.setString(6, issuedto);
        ps.setString(7, disposalmech);
        ps.setString(8, remark);
        ps.setString(9, InventoryNumber);

        // Execute the update
        ps.executeUpdate();

        // Update message
        JOptionPane.showMessageDialog(null, "Updated Successfully");

        // Refresh the table display
        refreshTable();
        
        // Reset buttons state
        butUpdate.setEnabled(false);
        butDelete.setEnabled(false);
        butSave.setEnabled(true);
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    } finally {
        try {
            // Close the resources
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

        

    }//GEN-LAST:event_butUpdateActionPerformed

    private void tableDisposalRecordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDisposalRecordMouseClicked
        // TODO add your handling code here:

       
       int selectedRowIndex = tableDisposalRecord.getSelectedRow();
    
    // Check if a row is selected
    if (selectedRowIndex != -1) {
        // Retrieve data from the selected row
        TableModel model = tableDisposalRecord.getModel();
        
        // Ensure model and the necessary components are not null to prevent NullPointerException
        if (model != null && txtInvenId != null && txtItemDesc != null && txtQty != null 
            && txtDateMan != null && txtDateExp != null && txtDispDate != null 
            && txtIssue != null && txtDispMech != null && txtRemark != null) {
            
            txtInvenId.setText(getSafeString(model.getValueAt(selectedRowIndex, 0)));
            txtItemDesc.setText(getSafeString(model.getValueAt(selectedRowIndex, 1)));
            txtQty.setText(getSafeString(model.getValueAt(selectedRowIndex, 2)));
            txtDateMan.setText(getSafeString(model.getValueAt(selectedRowIndex, 3)));
            txtDateExp.setText(getSafeString(model.getValueAt(selectedRowIndex, 4)));
            txtDispDate.setText(getSafeString(model.getValueAt(selectedRowIndex, 5)));
            txtIssue.setText(getSafeString(model.getValueAt(selectedRowIndex, 6)));
            txtDispMech.setText(getSafeString(model.getValueAt(selectedRowIndex, 7)));
            txtRemark.setText(getSafeString(model.getValueAt(selectedRowIndex, 8)));

            // Disable Save button and enable Update and Delete buttons
            butSave.setEnabled(false);
            butUpdate.setEnabled(true);
            butDelete.setEnabled(true);
        }
    }
}

// Helper method to handle null values and return empty string if value is null
private String getSafeString(Object value) {
    return (value == null) ? "" : value.toString();
    }//GEN-LAST:event_tableDisposalRecordMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tableDisposalRecord.getModel();
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            PreparedStatement ps1 = con.prepareStatement("select*from inventorytable where divisioncode=?");
            ps1.setString(1, div);
            ResultSet rs = ps1.executeQuery();
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("InventoryNumber"), rs.getString("item_desc"), rs.getInt("quantity"), rs.getString("manufactore_date"), rs.getDate("expiry_date"), rs.getDate("disposal_date"), rs.getString("issued_to"), rs.getString("disposal_mechanism"), rs.getString("remarks")});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        butUpdate.setEnabled(false);
        butDelete.setEnabled(false);

    }//GEN-LAST:event_formComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisposalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisposalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisposalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisposalRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisposalRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butDelete;
    private javax.swing.JButton butReset;
    private javax.swing.JButton butSave;
    private javax.swing.JButton butUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableDisposalRecord;
    private javax.swing.JTextField txtDateExp;
    private javax.swing.JTextField txtDateMan;
    private javax.swing.JTextField txtDispDate;
    private javax.swing.JTextField txtDispMech;
    private javax.swing.JTextField txtInvenId;
    private javax.swing.JTextField txtIssue;
    private javax.swing.JTextField txtItemDesc;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtRemark;
    // End of variables declaration//GEN-END:variables
}
